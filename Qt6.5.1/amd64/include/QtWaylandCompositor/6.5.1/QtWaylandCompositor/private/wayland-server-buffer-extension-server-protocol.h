/* Generated by wayland-scanner 1.18.0 */

#ifndef SERVER_BUFFER_EXTENSION_SERVER_PROTOCOL_H
#define SERVER_BUFFER_EXTENSION_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server-core.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_server_buffer_extension The server_buffer_extension protocol
 * @section page_ifaces_server_buffer_extension Interfaces
 * - @subpage page_iface_qt_server_buffer - buffers managed by the compositor
 * @section page_copyright_server_buffer_extension Copyright
 * <pre>
 *
 * Copyright (C) 2015 The Qt Company Ltd.
 * SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause
 * </pre>
 */
struct qt_server_buffer;

/**
 * @page page_iface_qt_server_buffer qt_server_buffer
 * @section page_iface_qt_server_buffer_desc Description
 *
 * Server buffer is an extension which makes it possible to share a
 * buffer created by the compositor to share it with arbitrary
 * clients. These types of buffers are intended to be read only
 * buffers for clients, but this is an implementation detail.
 *
 * Server buffers main purpose is to help implement caches
 * @section page_iface_qt_server_buffer_api API
 * See @ref iface_qt_server_buffer.
 */
/**
 * @defgroup iface_qt_server_buffer The qt_server_buffer interface
 *
 * Server buffer is an extension which makes it possible to share a
 * buffer created by the compositor to share it with arbitrary
 * clients. These types of buffers are intended to be read only
 * buffers for clients, but this is an implementation detail.
 *
 * Server buffers main purpose is to help implement caches
 */
extern const struct wl_interface qt_server_buffer_interface;

/**
 * @ingroup iface_qt_server_buffer
 * @struct qt_server_buffer_interface
 */
struct qt_server_buffer_interface {
	/**
	 */
	void (*release)(struct wl_client *client,
			struct wl_resource *resource);
};


/**
 * @ingroup iface_qt_server_buffer
 */
#define QT_SERVER_BUFFER_RELEASE_SINCE_VERSION 1

#ifdef  __cplusplus
}
#endif

#endif
